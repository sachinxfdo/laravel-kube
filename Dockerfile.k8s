FROM php:8.2-fpm

# Set working directory
WORKDIR /var/www/html

# Install system dependencies
RUN apt-get update && apt-get install -y \
    git curl zip unzip libpng-dev libjpeg-dev libfreetype6-dev \
    libonig-dev libxml2-dev libzip-dev netcat-traditional \
    && docker-php-ext-install pdo pdo_mysql mbstring exif pcntl bcmath zip \
    && apt-get clean

# Install Composer
COPY --from=composer:latest /usr/bin/composer /usr/bin/composer

# Copy application code
COPY . .

# Install PHP dependencies
RUN composer install --no-dev --optimize-autoloader

# Set permissions
RUN chown -R www-data:www-data /var/www/html \
    && chmod -R 755 /var/www/html

# Create entrypoint script for migrations
RUN echo '#!/bin/bash\n\
set -e\n\
\n\
echo "🔄 Starting Laravel application..."\n\
\n\
# Wait for database to be ready\n\
echo "⏳ Waiting for database connection..."\n\
max_attempts=30\n\
attempt=1\n\
\n\
while [ $attempt -le $max_attempts ]; do\n\
    if nc -z ${DB_HOST:-mysql} ${DB_PORT:-3306}; then\n\
        echo "✅ Database port is open, testing connection..."\n\
        if php artisan tinker --execute="try { DB::connection()->getPdo(); echo \"Connected\"; } catch(Exception \$e) { echo \"Failed: \" . \$e->getMessage(); exit(1); }" 2>/dev/null | grep -q "Connected"; then\n\
            echo "✅ Database connection successful!"\n\
            break\n\
        fi\n\
    fi\n\
    echo "⏳ Database not ready (attempt $attempt/$max_attempts), waiting 2 seconds..."\n\
    sleep 2\n\
    attempt=$((attempt + 1))\n\
done\n\
\n\
if [ $attempt -gt $max_attempts ]; then\n\
    echo "❌ Failed to connect to database after $max_attempts attempts"\n\
    exit 1\n\
fi\n\
\n\
# Run migrations\n\
echo "🚀 Running database migrations..."\n\
if php artisan migrate --force; then\n\
    echo "✅ Migrations completed successfully!"\n\
else\n\
    echo "❌ Migration failed!"\n\
    exit 1\n\
fi\n\
\n\
# Clear and cache config for better performance\n\
echo "🔧 Optimizing Laravel..."\n\
php artisan config:cache\n\
php artisan route:cache\n\
php artisan view:cache\n\
\n\
echo "🎉 Laravel application ready!"\n\
echo "🚀 Starting PHP-FPM..."\n\
\n\
# Start PHP-FPM\n\
exec php-fpm\n\
' > /usr/local/bin/laravel-start.sh && chmod +x /usr/local/bin/laravel-start.sh

EXPOSE 9000

# Use the custom entrypoint script
CMD ["/usr/local/bin/laravel-start.sh"]